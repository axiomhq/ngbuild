package mocks

import (
	"github.com/stretchr/testify/mock"
	"github.com/watchly/ngbuild/core"
)

// automatically generated by mockery

// Integration is an autogenerated mock type for the Integration type
type Integration struct {
	mock.Mock
}

// AttachToApp provides a mock function with given fields: _a0
func (_m *Integration) AttachToApp(_a0 core.App) error {
	ret := _m.Called(_a0)

	var r0 error
	if rf, ok := ret.Get(0).(func(core.App) error); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Identifier provides a mock function with given fields:
func (_m *Integration) Identifier() string {
	ret := _m.Called()

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// IsProvider provides a mock function with given fields: _a0
func (_m *Integration) IsProvider(_a0 string) bool {
	ret := _m.Called(_a0)

	var r0 bool
	if rf, ok := ret.Get(0).(func(string) bool); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Get(0).(bool)
	}

	return r0
}

// ProvideFor provides a mock function with given fields: c, directory
func (_m *Integration) ProvideFor(c *core.BuildConfig, directory string) error {
	ret := _m.Called(c, directory)

	var r0 error
	if rf, ok := ret.Get(0).(func(*core.BuildConfig, string) error); ok {
		r0 = rf(c, directory)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Shutdown provides a mock function with given fields:
func (_m *Integration) Shutdown() {
	_m.Called()
}
